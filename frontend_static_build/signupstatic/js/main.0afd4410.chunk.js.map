{"version":3,"sources":["constants.js","components/uploadPic/UploadPic.jsx","pages/signUp/SignUp.jsx","components/navbar/Navbar.jsx","components/uploadRecording/UploadRecording.jsx","assets/demo_video.mp4","pages/taskPerform/VerticalStepper.jsx","pages/taskPerform/TaskPerformStepper.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","toBase64","file","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","error","readAsDataURL","UploadPic","props","picture","setPicture","handleDrop","useCallback","acceptedFiles","a","base64EncodedImage","onDrop","accept","getRootProps","getInputProps","className","style","color","withRouter","useState","fname","setFname","lname","setLname","email","setEmail","Card","Form","onSubmit","e","preventDefault","signUpForm","console","log","axios","post","then","res","data","user_id","localStorage","setItem","history","push","catch","err","alert","textAlign","marginBottom","fontWeight","Row","Col","sm","FormGroup","Label","float","Input","type","onChange","value","placeholder","required","Button","Navbar","id","onClick","window","location","href","icon","bxlGithub","width","height","recordings","setRecordings","Container","marginTop","fontFamily","maxFiles","length","userId","getItem","eegRecordings","FormData","map","append","useStyles","makeStyles","theme","root","button","spacing","marginRight","actionsContainer","resetContainer","padding","stepIcon","stepIconActive","stepIconComplete","VerticalStepper","classes","React","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","orientation","backgroundColor","Step","StepLabel","StepIconProps","active","completed","StepContent","borderColor","CardHeader","fontSize","CardBody","brainIcon","disabled","variant","raisedFistMediumLightSkinTone","footMediumLightSkinTone","url","demoVideo","controls","muted","marginLeft","CardText","border","TaskPerformStepper","App","exact","path","component","SignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"signupstatic/js/main.0afd4410.chunk.js","sourcesContent":["export const BASE_URL = \"http://127.0.0.1:8000/api\"","import React, { useCallback } from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport \"./UploadPic.css\";\n\n\nconst toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n        resolve(event.target.result);\n    };\n    reader.onerror = (error) => {\n        reject(error);\n    };\n\n    reader.readAsDataURL(file);\n});\n\n\n/*\n * Renders a drag and drop picture upload component\n*/\nconst UploadPic = (props) => {\n\n    // picture stores the image file details\n    const { picture, setPicture } = props;\n\n    const handleDrop = useCallback(async (acceptedFiles) => {\n        const base64EncodedImage = await toBase64(acceptedFiles[0]);\n        setPicture(base64EncodedImage);\n    }, []);\n\n\n    return (\n        <div>\n            <Dropzone\n                onDrop={handleDrop}\n                accept=\"image/*\"\n            >\n                {({ getRootProps, getInputProps }) => (\n                    <div {...getRootProps({ className: \"dropzone_upload\" })}>\n                        <input {...getInputProps()} />\n                        <span className=\"spam_upload\">{\"📂\"}</span>\n                        <p>Drag'n'drop profile picture, or click to select image file</p>\n                    </div>\n                )}\n            </Dropzone>\n            <div style={{ color: \"white\" }}>\n                <strong>\n                    picture:\n                    {\n                        picture ?\n                            \"File Uploaded\" :\n                            \" Not uploaded\"\n                    }\n                </strong>\n            </div>\n        </div>\n    );\n}\n\nUploadPic.propTypes = {\n    picture: PropTypes.object.isRequired,\n    setPicture: PropTypes.func.isRequired,\n};\n\nexport default UploadPic;\n","import React, { useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button, Card, Col, Row } from 'reactstrap';\nimport { BASE_URL } from '../../constants'\nimport { withRouter } from \"react-router-dom\";\nimport UploadPic from \"../../components/uploadPic/UploadPic\";\nimport axios from \"axios\";\nimport './SignUp.css'\n\n\n\nconst SignUp = (props) => {\n\n    const [picture, setPicture] = useState(null)\n    const [fname, setFname] = useState(\"\")\n    const [lname, setLname] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    \n    \n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (picture === null) {\n            alert(\"Add a Profile Picture\")\n            return\n        }\n        var signUpForm = {}\n\n        signUpForm[\"f_name\"] = fname\n        signUpForm[\"l_name\"] = lname\n        signUpForm[\"email\"] = email\n        signUpForm[\"profile_photo\"] = picture\n\n\n        console.log(signUpForm)\n\n        axios.post(BASE_URL + \"/user/register_user\", { \"user\": signUpForm })\n            .then((res) => {\n                console.log(res.data.data.user_id)\n                localStorage.setItem(\"Token\", res.data.data.user_id);\n                props.history.push(\"/signup.html/taskperform\")\n            })\n            .catch((err) => {\n                console.log(err)\n                alert(\"Enter all fields\")\n            }\n            )\n\n\n    }\n    return (\n        <Card className=\"gradient_background py-1 my-2 mx-auto\">\n            <Form onSubmit={onSubmit} className=\"mx-5\">\n\n                <h1 style={{ textAlign: \"center\", marginBottom: \"2rem\", color: \"white\", fontWeight: \"bold\" }}>Registration</h1>\n                <Row>\n                    <Col sm=\"4\">\n                        <FormGroup className=\"my-3\">\n                            <Label style={{ color: \"white\", fontWeight: \"bolder\" }}>{\"Profile Picture\"}</Label>\n                            <UploadPic picture={picture} setPicture={setPicture} />\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup className=\"my-3\">\n                            <Label style={{ color: \"white\", fontWeight: \"bolder\" , textAlign:\"left\", float:\"left\"}}>{\"First Name\"}</Label>\n                            <Input type={\"text\"} onChange={event => setFname(event.target.value)}\n                                value={fname} placeholder={\"John\"} required={true}>\n                            </Input>\n                        </FormGroup>\n\n                        <FormGroup className=\"my-4\">\n                            <Label style={{ color: \"white\", fontWeight: \"bolder\", textAlign:\"left\", float:\"left\" }}>{\"Last Name\"}</Label>\n                            <Input type={\"text\"} onChange={event => setLname(event.target.value)}\n                                value={lname} placeholder={\"Doe\"} required={true}>\n                            </Input>\n                        </FormGroup>\n\n                        <FormGroup className=\"my-4\">\n                            <Label style={{ color: \"white\", fontWeight: \"bolder\", textAlign:\"left\", float:\"left\" }}>{\"Email\"}</Label>\n                            <Input type={\"email\"} onChange={event => setEmail(event.target.value)}\n                                value={email} placeholder={\"john.doe@xyz.com\"} required={true}>\n                            </Input>\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Button className=\"fillButton fill\" >\n                    Next\n                </Button>\n            </Form>\n        </Card>\n    );\n};\n\nexport default withRouter(SignUp);\n","import React from 'react';\nimport { Icon, InlineIcon } from '@iconify/react';\nimport bxlGithub from '@iconify-icons/bx/bxl-github';\nimport './Navbar.css'\n\n\nconst Navbar = () => {\n    return (\n        <div id=\"navbarCss\">\n            <h3 className=\"brainCss\">Brain</h3>\n            <h3 className=\"passwordCss\" >Password</h3>\n            <button className=\"gihtubBtn\" onClick={()=>window.location.href = \"https://github.com\"}>Github <Icon icon={bxlGithub} width={24} height={24} /></button>\n        </div>\n    )\n}\n\nexport default Navbar;","import React, { useState } from 'react';\nimport { animated as a } from 'react-spring';\nimport { Container, Row } from 'reactstrap';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { BASE_URL } from '../../constants';\nimport { withRouter } from \"react-router-dom\";\nimport './UploadRecording.css'\nimport { Button } from 'reactstrap';\n\nconst UploadRecording = (props) => {\n    // recording stores the image file details\n    const [recordings, setRecordings] = useState([])\n\n    // Sets the image file when dragged and dropped in the dropping zone\n    const handleDrop = acceptedFiles => {\n        setRecordings(acceptedFiles)\n    }\n\n    const onClick = () => {\n        if (recordings.length == 6) {\n            const userId = localStorage.getItem(\"Token\")\n            const eegRecordings = new FormData()\n            recordings.map((file) => {\n                eegRecordings.append(\"eeg_files\", file)\n            })\n\n            axios.post(BASE_URL + \"/eeg_recordings/register_eeg_recordings/\" + userId, eegRecordings)\n                .then((res) => {\n                    console.log(res)\n                    alert(\"Recordings uploaded\")\n                    window.location.href = \"/\"\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n        else{\n            alert(\"Upload all files\")\n        }\n    }\n\n    return (\n        <Container style={{ marginTop: \"2rem\", fontFamily:\"Poppins, sans-serif\" }}>\n            <Dropzone\n                onDrop={handleDrop}\n                maxFiles={6}\n            >\n                {({ getRootProps, getInputProps }) => (\n                    <div {...getRootProps({ className: \"dropzone_upload_recording\" })}>\n                        <input {...getInputProps()} />\n                        <span className=\"spam_upload_recording\">{\"📂\"}</span>\n                        {\n                            recordings.length === 0 ?\n                                (<p>Upload six EEG recording <br /> Drag'n'drop recordings, or click to select recording file</p>)\n                                :\n                                (<p>{recordings.length}Recordings Uploaded</p>)\n                        }\n                    </div>\n                )}\n            </Dropzone>\n            <Button className=\"fillButton fill\" onClick={onClick}>Submit</Button>\n        </Container >\n    );\n}\n\nexport default withRouter(UploadRecording);","export default __webpack_public_path__ + \"signupstatic/media/demo_video.f4b1834f.mp4\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport { Icon, InlineIcon } from '@iconify/react';\nimport raisedFistMediumLightSkinTone from '@iconify-icons/emojione/raised-fist-medium-light-skin-tone';\nimport brainIcon from '@iconify-icons/noto/brain';\nimport footMediumLightSkinTone from '@iconify-icons/twemoji/foot-medium-light-skin-tone';\nimport ReactPlayer from 'react-player'\nimport { Card, CardBody, CardHeader, CardText } from 'reactstrap';\nimport demoVideo from '../../assets/demo_video.mp4'\nimport './VerticalStepper.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        marginTop: '2rem',\n        fontFamily: \"Poppins, sans-serif\"\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n    stepIcon: {\n        color: \"#72f\"\n    },\n    stepIconActive: {\n        color: \"#72f !important\"\n    },\n    stepIconComplete: {\n        color: \"#72f !important\"\n    }\n}));\n\nfunction getSteps() {\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\n\nexport default function VerticalStepper() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\" style={{ backgroundColor: \"black\", color: \"white\" }}>\n                <Step key={\"Step 1\"}>\n                    <StepLabel StepIconProps={{\n                        classes: { root: classes.stepIcon, active: classes.stepIconActive, completed: classes.stepIconComplete }\n                    }}>Step 1</StepLabel>\n                    <StepContent>\n                        <Card style={{ color: \"black\", borderColor: \"black\" }}>\n                            <CardHeader style={{ color: \"#72f\", backgroundColor: \"black\", fontWeight: \"bold\", fontSize: \"2rem\" }}>Step 1</CardHeader>\n                            <CardBody style={{ backgroundColor: \"white\", color: \"black\" }}>\n                                <Icon icon={brainIcon} width={100} height={100} />\n                                <br />\n                                    Wear Headgear\n                                </CardBody>\n                        </Card>\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                    style={{ color: \"white\" }}\n                                >\n                                    Back\n                                    </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    Next\n                                    </Button>\n                            </div>\n                        </div>\n                    </StepContent>\n                </Step>\n\n                <Step key={\"Step 2\"}>\n                    <StepLabel StepIconProps={{\n                        classes: { root: classes.stepIcon, active: classes.stepIconActive, completed: classes.stepIconComplete }\n                    }}>Step 2</StepLabel>\n                    <StepContent>\n                        <Card style={{ color: \"black\", borderColor: \"black\" }}>\n                            <CardHeader style={{ color: \"#72f\", backgroundColor: \"black\", fontWeight: \"bold\", fontSize: \"2rem\" }}>Step 2</CardHeader>\n                            <CardBody style={{ backgroundColor: \"white\", color: \"black\" }}>\n                                <Icon icon={raisedFistMediumLightSkinTone} width={100} height={100} />\n                                <br />\n                                Close the fist on seeing an image on the top of the screen\n                                </CardBody>\n                        </Card>\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                    style={{ color: \"white\" }}\n                                >\n                                    Back\n                                    </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    Next\n                                    </Button>\n                            </div>\n                        </div>\n                    </StepContent>\n                </Step>\n\n                <Step key={\"Step 3\"}>\n                    <StepLabel StepIconProps={{\n                        classes: { root: classes.stepIcon, active: classes.stepIconActive, completed: classes.stepIconComplete }\n                    }}>Step 3</StepLabel>\n                    <StepContent>\n                        <Card style={{ color: \"black\", borderColor: \"black\" }}>\n                            <CardHeader style={{ color: \"#72f\", backgroundColor: \"black\", fontWeight: \"bold\", fontSize: \"2rem\" }}>Step 3</CardHeader>\n                            <CardBody style={{ backgroundColor: \"white\", color: \"black\" }}>\n                                <Icon icon={footMediumLightSkinTone} width={100} height={100} />\n                                <br />\n                                Turn your foot inwards on seeing an image on the bottom of the screen\n                                </CardBody>\n                        </Card>\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                    style={{ color: \"white\" }}\n                                >\n                                    Back\n                                    </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    Next\n                                    </Button>\n                            </div>\n                        </div>\n                    </StepContent>\n                </Step>\n\n                <Step key={\"Step 4\"}>\n                    <StepLabel StepIconProps={{\n                        classes: { root: classes.stepIcon, active: classes.stepIconActive, completed: classes.stepIconComplete }\n                    }}>Step 4</StepLabel>\n                    <StepContent>\n                        <Card style={{ color: \"black\", borderColor: \"black\" }}>\n                            <CardHeader style={{ color: \"#72f\", backgroundColor: \"black\", fontWeight: \"bold\", fontSize: \"2rem\" }}>Step 4</CardHeader>\n                            <CardBody style={{ backgroundColor: \"white\", color: \"black\" }}>\n                                <ReactPlayer url={demoVideo}\n                                    controls={true} muted={true} width={400}\n                                    height={400} style={{ marginLeft: \"auto\", marginRight: \"auto\" }} />\n                                <br />\n                                View Demo Video\n                                </CardBody>\n                        </Card>\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                    style={{ color: \"white\" }}\n                                >\n                                    Back\n                                    </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    Finish\n                                    </Button>\n                            </div>\n                        </div>\n                    </StepContent>\n                </Step>\n            </Stepper>\n            {activeStep === steps.length + 1 && (\n                <Card style={{backgroundColor: \"black\", }}>\n                    <CardBody>\n                        <CardText style={{fontSize:\"larger\", fontWeight:\"bold\", color: \"white\" }}>All Steps Completed</CardText>\n                        <Button onClick={handleReset} className={\"fillButton fill\"} style={{color: \"white\", border:\"2px white solid\"}}>\n                            Reset\n                        </Button>\n                    </CardBody>\n                </Card>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { Row, Col, Container } from 'reactstrap';\nimport UploadRecording from '../../components/uploadRecording/UploadRecording';\nimport VerticalStepper from './VerticalStepper';\n\n\nconst TaskPerformStepper = () => {\n    return (\n        <Container style={{fontFamily:\"Poppins, sans-serif\"}}>\n            <h1 style={{color:\"white\", textAlign:\"center\", fontWeight:\"bold\"}}>Upload Recording</h1>\n            <Row>\n                <Col>\n                    <VerticalStepper />\n                </Col>\n                <Col>\n                    <UploadRecording />\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default TaskPerformStepper;","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SignUp from './pages/signUp/SignUp';\nimport Navbar from './components/navbar/Navbar';\nimport TaskPerformStepper from './pages/taskPerform/TaskPerformStepper';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path={\"/signup.html/\"} component={SignUp} />\n          <Route exact path={\"/signup.html/taskperform\"} component={TaskPerformStepper} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}