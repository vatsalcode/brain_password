webpackJsonp([1],{"2J3f":function(e,t){e.exports={affective:[],analytic:[],process:[],semantic:[],episodic:[],cerebellum:[],bridge:[],amygdala:[],lines:{affective:[],analytic:[],process:[],semantic:[],episodic:[]}}},"EYp+":function(e,t){e.exports="#define GLSLIFY 1\nuniform vec3 glowColor;\nuniform sampler2D lightningTexture;\nvarying float intensity;\nvarying vec2 vUv;\nuniform float offsetY;\nuniform float uTime;\n\nvoid main(){\n    vec2 uv = vUv;\n    uv.y += offsetY;\n\n  \tvec3 glow = glowColor * intensity;\n    vec3 color = vec3(step(0.1, uv.y) - step(0.2, uv.y)) - vec3(texture2D(lightningTexture, uv));\n\n\tfloat alpha = clamp(cos(uTime* 3.0) , 0.5, 1.0);\n\n    gl_FragColor = vec4( glow + color, alpha);\n}"},"FAD+":function(e,t){e.exports="float noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners porcentages\n    return mix(a, b, u.x) +\n        (c - a)* u.y * (1.0 - u.x) +\n        (d - b) * u.x * u.y;\n}"},"Mz7+":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=d(n("fZjL")),a=d(n("Dd8w")),r=d(n("Zrlr")),o=d(n("wxAW")),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n("Ml+6")),l=n("+Uzz");n("9ezR"),n("/lXX"),n("4iZf"),n("hiZs");var u=d(n("rXwf")),c=d(n("2J3f"));n("M4fF");function d(e){return e&&e.__esModule?e:{default:e}}var f=function(){function e(){(0,r.default)(this,e),this.initialWidth=window.innerWidth,this.initialHeight=window.innerHeight,this.finalWidth=window.innerWidth/2,this.finalHeight=window.innerHeight/2,this.camera=new s.PerspectiveCamera(50,window.innerWidth/window.innerHeight,1,1e3),this.camera.position.z=1e3,this.scene=new s.Scene,this.scene.background=new s.Color("black"),this.scene.fog=new s.Fog(10991314,300,1300),this.renderer=new s.WebGLRenderer({antialias:!0,alpha:!0,preserveDrawingBuffer:!1,logarithmicDepthBuffer:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.sortObjects=!1,this.renderer.setClearColor(0,0),this.renderer.gammaInput=!0,this.renderer.gammaOutput=!0,document.getElementById("testObject").appendChild(this.renderer.domElement),this.orbitControls=new s.OrbitControls(this.camera,this.renderer.domElement),this.orbitControls.enableDamping=!0,this.orbitControls.dampingFactor=.25,this.orbitControls.enableZoom=!0,this.orbitControls.zoomSpeed=.1,this.orbitControls.panSpeed=.1,this.orbitControls.minDistance=50,this.orbitControls.maxDistance=2500,this.orbitControls.autoRotate=!1,this.orbitControls.autoRotateSpeed=1,this.orbitControls.rotateSpeed=.1,this.orbitControls.screenSpacePanning=!0,window.addEventListener("resize",this.onWindowResize.bind(this),!1),this.clock=new s.Clock,this.addBrain=this.addBrain.bind(this),this.ambienlight=new s.AmbientLight(12109263,0),this.scene.add(this.ambienlight),this.deltaTime=0,this.particlesColor=new s.Color(16777215),this.particlesStartColor=new s.Color(16777215),this.memories=c.default,this.memorySelected=["analytic","episodic","process","semantic","affective"],this.BRAIN_MODEL={},this.loadingManager=new s.LoadingManager,this.loadingManager.onLoad=this.handlerLoad.bind(this),this.loadingManager.onProgress=this.handlerProgress,this.loadingManager.onError=this.handlerError,this.loadingManager.onStart=this.handlerStart,this.loadOBJs()}return(0,o.default)(e,[{key:"handlerLoad",value:function(){console.log("loading Complete!"),this.addBrain(),this.addParticlesSystem(),this.animate(),this.startIntro()}},{key:"loadOBJs",value:function(){var e=this;new s.OBJLoader(this.loadingManager).load("static/models/BrainUVs.obj",function(t){e.BRAIN_MODEL=t})}},{key:"addBrain",value:function(){var t=this;this.brainBufferGeometries=[],this.BRAIN_MODEL.traverse(function(n){n instanceof s.LineSegments&&(t.memories.lines=(0,a.default)({},t.memories.lines,e.addLinesPath(n,t.memories))),n instanceof s.Mesh&&(n.geometry.verticesNeedUpdate=!0,t.brainBufferGeometries.push(n.geometry),t.memories=(0,a.default)({},t.memories,e.storeBrainVertices(n,t.memories)),t.endPointsCollections=s.BufferGeometryUtils.mergeBufferGeometries(t.brainBufferGeometries),console.error("MERGE WITH TEXTURE",t.endPointsCollections))})}},{key:"startIntro",value:function(){var e=this,t={p:1e3},n=25,i=!0;l.TweenMax.fromTo(t,6.5,{p:1e3},{p:380,ease:l.Power4.easeInOut,onUpdate:function(){if(e.camera.position.z=t.p,t.p<450&&0!=n)e.initialHeight=e.initialHeight/1.02,e.initialWidth=e.initialWidth/1.02,n--;else if(t.p<700&&0==n&&i){e.scene.children[2].translateY(-35),e.scene.children[1].translateY(-35);var a=document.getElementById("testRow"),r=document.createElement("div"),o=document.createElement("button"),s=document.createElement("button"),l=document.createElement("div");l.innerHTML="This study makes use of brain signals or electroencephalogram (EEG) as the biometric for authentication. The approach used to design this authentication system is based on deep learning architectures since they have revolutionized end-to-end learning, that is, learning from raw data. The architecture used in this study is a famous meta-learning model known as Siamese Network.",l.style.fontSize="1.2em",l.style.marginRight="3rem",l.style.marginTop="2rem";var u=document.createElement("div");u.innerHTML="About Us",u.setAttribute("class","headingCss"),r.appendChild(u),r.appendChild(l),r.appendChild(document.createElement("BR")),r.appendChild(document.createElement("BR")),r.appendChild(document.createElement("BR")),r.style.color="white",o.innerHTML="Sign Up",o.setAttribute("class","fillButton fill"),o.onclick=function(){window.location.href="signup.html"},s.innerHTML="Login",s.setAttribute("class","fillButton fill"),s.onclick=function(){window.location.href="login.html"},r.appendChild(o),r.appendChild(s),r.setAttribute("class","col"),a.appendChild(r),i=!1}},onStart:function(){e.particlesSystem.transform(!0)}})}},{key:"animate",value:function(){this.orbitControls.update(),this.orbitControls.autoRotateSpeed=.5,this.renderer.setSize(this.initialWidth,this.initialHeight),this.deltaTime+=this.clock.getDelta(),this.particlesSystem.update(this.deltaTime,this.camera,this.particlesSystem.xRay),requestAnimationFrame(this.animate.bind(this)),this.renderer.render(this.scene,this.camera),this.camera.updateProjectionMatrix()}},{key:"onWindowResize",value:function(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}},{key:"addParticlesSystem",value:function(){this.particlesSystem=new u.default(this,this.endPointsCollections,this.memories),this.scene.add(this.particlesSystem.particles),this.scene.add(this.particlesSystem.xRay)}}],[{key:"handlerStart",value:function(){console.log("Starting")}},{key:"handlerProgress",value:function(e,t,n){console.log("Loading file: "+e+".\nLoaded "+t+" of "+n+" files.")}},{key:"handlerError",value:function(e){console.log("There was an error loading "+e)}},{key:"addLinesPath",value:function(e,t){(0,i.default)(t.lines).map(function(n){return e.name.includes(n)?(t.lines[n]=e.geometry.attributes.position.array,t.lines):[]})}},{key:"storeBrainVertices",value:function(e,t){(0,i.default)(t).map(function(n){return e.name.includes(n)?t[n].length?(t[n].push(e.geometry),t[n]=[s.BufferGeometryUtils.mergeBufferGeometries(t[n])],t):t[n].push(e.geometry):[]})}}]),e}();t.default=f},XbjG:function(e,t){e.exports="float random (in vec2 st) {\n   return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}"},cRIw:function(e,t){e.exports="#define GLSLIFY 1\nuniform vec3 viewVector;\nuniform float c;\nuniform float p;\nuniform float uTime;\nvarying float intensity;\nvarying  vec2 vUv;\n\nvoid main(){\n\n    vUv = uv;\n\n    vec3 vNormal = normalize( normalMatrix * normal );\n\tvec3 vNormel = normalize( normalMatrix * viewVector );\n    intensity = pow(c - abs(dot(vNormal, vec3(0, 0, 1))), p);\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n }"},eslX:function(e,t,n){"use strict";n("pTlp");var i,a=n("Mz7+");new((i=a)&&i.__esModule?i:{default:i}).default},joTG:function(e,t){e.exports="vec2 rotate2D(vec2 _st, float _angle){\n        _st -= 0.5;\n        _st =  mat2(cos(_angle),-sin(_angle), sin(_angle),cos(_angle)) * _st;\n        _st += 0.5;\n  return _st;\n}"},pTlp:function(e,t){},rXwf:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=h(n("Zrlr")),a=h(n("wxAW")),r=m(n("dEn+")),o=m(n("Ml+6")),s=n("+Uzz"),l=h(n("FAD+")),u=h(n("XbjG")),c=h(n("joTG")),d=h(n("cRIw")),f=h(n("EYp+"));function m(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function h(e){return e&&e.__esModule?e:{default:e}}var p=function(){function e(t,n,a){(0,i.default)(this,e),console.log(n),this.brainParticles=n,this.memories=a,this.mainBrain=t,this.particlesStartColor=new o.Color(16777215),this.particlesColor=new o.Color(16777215);var r=this.init(),s=r.xRayEffect,l=r.systemPoints;this.particles=l,this.xRay=s}return(0,a.default)(e,[{key:"init",value:function(){var t=this.brainParticles.attributes.position.array,n=t.length/3,i=this,a=new r.PointBufferGeometry(n),s=e.getLoadingPoints();a.createAttribute("aStartLoading",3,function(e,n,i){var a=new o.Vector3;s.length<t.length?(a.x=s[3*n+0]||0,a.y=s[3*n+1]||0,a.z=o.Math.randFloat(-80,1500)):(a.x=100,a.y=100,a.z=o.Math.randFloat(-80,1500)),a.toArray(e)});var m=new o.Color;a.createAttribute("aStartColor",3,function(e){var t=i.particlesStartColor,n=t.r,a=t.g,r=t.b;m.setRGB(n,a,r),m.toArray(e)}),a.createAttribute("scale",1,function(e){e[0]=o.Math.randFloat(200,400)}),a.createAttribute("aEndColor",3,function(e){var t=i.particlesStartColor,n=t.r,a=t.g,r=t.b;m.setRGB(n,a,r),m.toArray(e)}),a.createAttribute("aEndPos",3,function(e,n){var i=new o.Vector3;i.x=t[3*n+0],i.y=t[3*n+1],i.z=t[3*n+2],i.toArray(e)}),this.totalDuration=1.3,a.createAttribute("aDelayDuration",3,function(e){e[0]=.3*Math.random(),e[1]=1}),new r.PointBufferGeometry(n).createAttribute("position",3,function(e,n){var i=new o.Vector3;i.x=t[3*n+0],i.y=t[3*n+1],i.z=t[3*n+2],i.toArray(e)});var h=new r.PointsAnimationMaterial({vertexColors:o.VertexColors,deptWrite:!1,blending:o.AdditiveBlending,depthTest:!0,transparent:!0,uniforms:{uTime:{type:"f",value:0},uProgress:{type:"float",value:0},uAngle:{type:"f",value:1},uPointSizeEffect:{type:"f",value:.1},uColor:{value:new o.Color(16777215)}},defines:{},uniformValues:{size:1.9,scale:400},vertexFunctions:[r.ShaderChunk.ease_expo_in_out,r.ShaderChunk.quaternion_rotation,c.default,u.default,l.default],vertexParameters:["uniform float uTime;","uniform float uPointSizeEffect;","uniform float uProgress;","uniform float uAngle;","attribute vec2 aDelayDuration;","attribute vec3 aStartLoading;","attribute vec3 aStartPos;","attribute vec3 aEndPos;","attribute vec3 aStartColor;","attribute vec3 aEndColor;","attribute float aStartOpacity;","attribute float aEndOpacity;"],varyingParameters:["\n          varying vec3 vParticle;\n          varying vec3 vEndPos;\n          varying vec3 vStartLoading;\n          "],vertexInit:["float tProgress = clamp(uProgress - aDelayDuration.x, 0.0, aDelayDuration.y) / aDelayDuration.y;","tProgress = easeExpoInOut(tProgress);"],vertexPosition:["\n        // linearly interpolate between the start and end position based on tProgress\n        // and add the value as a delta\n \n         if(tProgress < 0.5){ \n         vec2 pos = vec2(aStartLoading.xy*5.0);\n\n        // Use the noise function\n        float n = noise(aStartLoading.yx);\n     vec2 test;\n      if(mod(aStartLoading.x, 2.0) < 0.2){\n            test = rotate2D(aStartLoading.xy, PI*2.0 * uTime * uAngle * n);\n             transformed += vec3(test.x, test.y, aStartLoading.z * n);\n        }else if (mod(aStartLoading.x, 2.0) >= 0.2 && mod(aStartLoading.x, 2.0) < 1.5){\n            test = rotate2D(aStartLoading.xy + n, PI*2.0 * uTime * 0.05 * uAngle * n);\n            transformed += vec3(test.x, test.y, aStartLoading.z * n);\n        }else {\n            test = rotate2D(aStartLoading.xy + n, PI*2.0 * uTime * 0.01 * uAngle * n);\n            transformed += vec3(test.x, test.y , aStartLoading.z * n);\n        }\n        }else{\n        \n  \n        //Brain Particles\n           transformed += mix(aStartLoading, aEndPos, tProgress);\n        }   \n        "],vertexColor:[" \n         vParticle = aEndPos;\n         \n        vEndPos = aEndPos;\n        vStartLoading = aStartLoading;\n        "],fragmentParameters:["uniform float uTime;","uniform vec3 uColor;"],fragmentShape:["\n        float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n        float pct = 1.0 - smoothstep(0.0, 0.5, distanceToCenter);\n        vec3 color = vec3(1.0) * gl_FragColor.rgb;\n        gl_FragColor = vec4(color, pct * gl_FragColor.a);\n\n       "]}),p=new o.ShaderMaterial({uniforms:{c:{type:"f",value:.9},p:{type:"f",value:6.7},glowColor:{type:"c",value:new o.Color(8703231)},viewVector:{type:"v3",value:new o.Vector3(0,0,0)},lightningTexture:{type:"t",value:this.mainBrain.brainXRayLight},offsetY:{type:"f",value:.3},uTime:{type:"f",value:0}},vertexShader:d.default,fragmentShader:f.default,side:o.DoubleSide,blending:o.AdditiveBlending,transparent:!0,depthWrite:!1}),v=new o.Points(a,h);console.error("MEMORIES",this.memories);var g=(new o.Geometry).fromBufferGeometry(this.mainBrain.endPointsCollections);g.computeFaceNormals(),g.mergeVertices(),g.computeVertexNormals();var y=new o.Mesh(g,p);return v.frustumCulled=!1,v.customDistanceMaterial=r.Utils.createDistanceAnimationMaterial(h),v.customDepthMaterial=new o.ShaderMaterial({vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,uniforms:h.uniforms}),{xRayEffect:y,systemPoints:v}}},{key:"update",value:function(e,t,n){this.particles.material.uniforms.uTime.value=e,this.xRay.material.uniforms.viewVector.value=(new o.Vector3).subVectors(t.position,n.position),this.xRay.material.uniforms.uTime.value=e}},{key:"isXRayActive",value:function(e){var t=this;if(e){var n={p:0};s.TweenMax.fromTo(n,3,{p:3},{p:5,ease:s.Power1.easeIn,onUpdate:function(){t.xRay.material.uniforms.offsetY.value=Math.sin(n.p)},onComplete:function(){}})}else{var i={p:1};s.TweenMax.fromTo(i,3,{p:5},{p:3,ease:s.Power1.easeIn,onUpdate:function(){t.xRay.material.uniforms.offsetY.value=Math.sin(i.p)}})}}},{key:"updateTransitioning",value:function(e){this.particles.material.uniforms.uProgress.value+=1/300,this.particles.customDepthMaterial.uniforms.uProgress.value+=1/300,this.particles.customDistanceMaterial.uniforms.uProgress.value+=1/300}},{key:"transform",value:function(e){var t=this;if(e){var n={p:0};s.TweenMax.fromTo(n,5.9,{p:0},{p:1.5,ease:s.Power1.easeIn,onUpdate:function(){t.updateTransitioning(n.p)},onComplete:function(){t.mainBrain.orbitControls.maxDistance=700,t.mainBrain.orbitControls.autoRotate=!0,t.updateTransitioning(1.5)}})}else{var i={p:1};s.TweenMax.fromTo(i,2,{p:1},{p:.5,ease:s.Power1.easeIn,onUpdate:function(){t.updateTransitioning(i.p)}})}}}],[{key:"getLoadingPoints",value:function(){return new o.RingBufferGeometry(100,40,150,150,20).attributes.position.array}}]),e}();t.default=p}},["eslX"]);
//# sourceMappingURL=app.85dc9882c2a88098d698.js.map